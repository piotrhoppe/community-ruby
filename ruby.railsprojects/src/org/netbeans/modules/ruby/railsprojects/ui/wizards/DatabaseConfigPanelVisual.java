/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 * 
 * Copyright 1997-2007 Sun Microsystems, Inc. All rights reserved.
 * 
 * The contents of this file are subject to the terms of either the GNU
 * General Public License Version 2 only ("GPL") or the Common
 * Development and Distribution License("CDDL") (collectively, the
 * "License"). You may not use this file except in compliance with the
 * License. You can obtain a copy of the License at
 * http://www.netbeans.org/cddl-gplv2.html
 * or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
 * specific language governing permissions and limitations under the
 * License.  When distributing the software, include this License Header
 * Notice in each file and include the License file at
 * nbbuild/licenses/CDDL-GPL-2-CP.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the GPL Version 2 section of the License file that
 * accompanied this code. If applicable, add the following below the
 * License Header, with the fields enclosed by brackets [] replaced by
 * your own identifying information:
 * "Portions Copyrighted [year] [name of copyright owner]"
 * 
 * If you wish your version of this file to be governed by only the CDDL
 * or only the GPL Version 2, indicate your decision by adding
 * "[Contributor] elects to include this software in this distribution
 * under the [CDDL or GPL Version 2] license." If you do not indicate a
 * single choice of license, a recipient has the option to distribute
 * your version of this file under either the CDDL, the GPL Version 2 or
 * to extend the choice of license to its licensees as provided above.
 * However, if you add GPL Version 2 code and therefore, elected the GPL
 * Version 2 license, then the option applies only if the new code is
 * made subject to such option by the copyright holder.
 * 
 * Contributor(s):
 * 
 * Portions Copyrighted 2007 Sun Microsystems, Inc.
 */
package org.netbeans.modules.ruby.railsprojects.ui.wizards;

import java.awt.BorderLayout;
import org.netbeans.api.ruby.platform.RubyPlatform;
import org.openide.WizardDescriptor;
import org.openide.util.NbBundle;

/**
 *
 * @author Erno Mononen
 */
public class DatabaseConfigPanelVisual extends javax.swing.JPanel {

    private JdbcConnectionsPanel jdbcPanel; 
    private RailsAdaptersPanel adaptersPanel;
            
    /** Creates new form DatabaseConfigPanel */
    public DatabaseConfigPanelVisual() {
        initComponents();
        jdbcPanel = new JdbcConnectionsPanel();
        adaptersPanel = new RailsAdaptersPanel();
        setName(NbBundle.getMessage(DatabaseConfigPanelVisual.class, "LAB_ConfigureDatabase"));
        putClientProperty("NewProjectWizard_Title", NbBundle.getMessage(DatabaseConfigPanelVisual.class, "TXT_ConfigureDatabase")); // NOI18N
                
        initInnerPanels();
    }

    private boolean isJdbc() {
        return configureUsingJdbc.isSelected();
    }
    
    private SettingsPanel getActivePanel() {
        return isJdbc() ? jdbcPanel : adaptersPanel;
    }
    
    void read(WizardDescriptor descriptor) {
        RubyPlatform platform = 
                (RubyPlatform) descriptor.getProperty(NewRailsProjectWizardIterator.PLATFORM);
        configureUsingJdbc.setSelected(platform.isJRuby());
        jdbcPanel.read(descriptor);
        adaptersPanel.read(descriptor);
    }
    
    void store(WizardDescriptor descriptor) {
        
        getActivePanel().store(descriptor);
    }

    private void initInnerPanels() {
        boolean jdbc = isJdbc();
        if (jdbc) {
            connectionPanelContainer.remove(adaptersPanel);
            connectionPanelContainer.add(jdbcPanel, BorderLayout.CENTER);
        } else {
            connectionPanelContainer.remove(jdbcPanel);
            connectionPanelContainer.add(adaptersPanel, BorderLayout.CENTER);
        }
        jdbcPanel.setVisible(jdbc);
        adaptersPanel.setVisible(!jdbc);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        connectionPanelContainer = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        configureUsingJdbc = new javax.swing.JCheckBox();

        connectionPanelContainer.setLayout(new java.awt.BorderLayout());

        configureUsingJdbc.setText(org.openide.util.NbBundle.getMessage(DatabaseConfigPanelVisual.class, "LBL_ConfigureUsingIDEConnections")); // NOI18N
        configureUsingJdbc.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                configureUsingJdbcItemStateChanged(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jSeparator1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 585, Short.MAX_VALUE)
                    .add(configureUsingJdbc)
                    .add(connectionPanelContainer, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 579, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(configureUsingJdbc)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jSeparator1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(connectionPanelContainer, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 301, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(29, 29, 29))
        );
    }// </editor-fold>//GEN-END:initComponents

private void configureUsingJdbcItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_configureUsingJdbcItemStateChanged
    initInnerPanels();
    // TODO add your handling code here:
}//GEN-LAST:event_configureUsingJdbcItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox configureUsingJdbc;
    private javax.swing.JPanel connectionPanelContainer;
    private javax.swing.JSeparator jSeparator1;
    // End of variables declaration//GEN-END:variables

}
