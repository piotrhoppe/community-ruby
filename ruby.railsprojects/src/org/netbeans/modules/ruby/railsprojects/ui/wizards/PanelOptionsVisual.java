/*
 * The contents of this file are subject to the terms of the Common Development
 * and Distribution License (the License). You may not use this file except in
 * compliance with the License.
 *
 * You can obtain a copy of the License at http://www.netbeans.org/cddl.html
 * or http://www.netbeans.org/cddl.txt.
 *
 * When distributing Covered Code, include this CDDL Header Notice in each file
 * and include the License file at http://www.netbeans.org/cddl.txt.
 * If applicable, add the following below the CDDL Header, with the fields
 * enclosed by brackets [] replaced by your own identifying information:
 * "Portions Copyrighted [year] [name of copyright owner]"
 *
 * The Original Software is NetBeans. The Initial Developer of the Original
 * Software is Sun Microsystems, Inc. Portions Copyright 1997-2006 Sun
 * Microsystems, Inc. All Rights Reserved.
 */


package org.netbeans.modules.ruby.railsprojects.ui.wizards;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import org.netbeans.api.ruby.platform.RubyInstallation;
import org.openide.WizardDescriptor;
import org.openide.WizardValidationException;
import org.openide.util.NbBundle;

/**
 *
 * @author  phrebejk
 */
public class PanelOptionsVisual extends SettingsPanel implements ActionListener, PropertyChangeListener {
    
    private static boolean lastMainClassCheck = true; // XXX Store somewhere
    
    private PanelConfigureProject panel;
    private boolean valid;
    
    /** Creates new form PanelOptionsVisual */
    public PanelOptionsVisual( PanelConfigureProject panel, int type ) {
        initComponents();
        this.panel = panel;

        switch (type) {
//            case NewRailsProjectWizardIterator.TYPE_LIB:
//                setAsMainCheckBox.setVisible( false );
//                createMainCheckBox.setVisible( false );
//                mainClassTextField.setVisible( false );
//                break;
            case NewRailsProjectWizardIterator.TYPE_APP:
                //createMainCheckBox.addActionListener( this );
                //createMainCheckBox.setSelected( lastMainClassCheck );
                //mainClassTextField.setEnabled( lastMainClassCheck );
                break;
            case NewRailsProjectWizardIterator.TYPE_EXT:
                setAsMainCheckBox.setVisible( true );
                //createMainCheckBox.setVisible( false );
                //mainClassTextField.setVisible( false );
                break;
        }
        
        jdbcCheckBox.addActionListener(this);
        warCheckBox.addActionListener(this);
        
        //this.mainClassTextField.getDocument().addDocumentListener( new DocumentListener () {
        //   
        //    public void insertUpdate(DocumentEvent e) {
        //        mainClassChanged ();
        //    }
        //    
        //    public void removeUpdate(DocumentEvent e) {
        //        mainClassChanged ();
        //    }
        //    
        //    public void changedUpdate(DocumentEvent e) {
        //        mainClassChanged ();
        //    }
        //    
        //});
    }

    public void actionPerformed( ActionEvent e ) {  
        if (e.getSource() == jdbcCheckBox) {
            this.panel.fireChangeEvent();
        } else if (e.getSource() == warCheckBox) {
            this.panel.fireChangeEvent();
        }
        //if ( e.getSource() == createMainCheckBox ) {
        //    lastMainClassCheck = createMainCheckBox.isSelected();
        //    mainClassTextField.setEnabled( lastMainClassCheck );        
        //    this.panel.fireChangeEvent();
        //}                
    }
    
    public void propertyChange (PropertyChangeEvent event) {
        //if (PanelProjectLocationVisual.PROP_PROJECT_NAME.equals(event.getPropertyName())) {
        //    String newProjectName = NewRailsProjectWizardIterator.getPackageName((String) event.getNewValue());
        //    if (!Utilities.isJavaIdentifier(newProjectName)) {
        //        newProjectName = NbBundle.getMessage (PanelOptionsVisual.class, "TXT_PackageNameSuffix", newProjectName); 
        //    }
        //    this.mainClassTextField.setText (MessageFormat.format(
        //        NbBundle.getMessage (PanelOptionsVisual.class,"TXT_ClassName"), new Object[] {newProjectName}
        //    ));
        //}
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {

        setAsMainCheckBox = new javax.swing.JCheckBox();
        dbLabel = new javax.swing.JLabel();
        dbCombo = new javax.swing.JComboBox();
        jdbcCheckBox = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        warCheckBox = new javax.swing.JCheckBox();

        setAsMainCheckBox.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(setAsMainCheckBox, org.openide.util.NbBundle.getBundle(PanelOptionsVisual.class).getString("LBL_setAsMainCheckBox")); // NOI18N
        setAsMainCheckBox.setMargin(new java.awt.Insets(0, 0, 0, 0));

        dbLabel.setLabelFor(dbCombo);
        dbLabel.setText(org.openide.util.NbBundle.getMessage(PanelOptionsVisual.class, "Database")); // NOI18N

        dbCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "mysql", "oracle", "postgresql", "sqlite2", "sqlite3" }));

        jdbcCheckBox.setText(org.openide.util.NbBundle.getMessage(PanelOptionsVisual.class, "UseJdbc")); // NOI18N

        jLabel1.setText(org.openide.util.NbBundle.getMessage(PanelOptionsVisual.class, "UsingRuby")); // NOI18N

        warCheckBox.setText(org.openide.util.NbBundle.getMessage(PanelOptionsVisual.class, "WarFile")); // NOI18N

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(setAsMainCheckBox)
                    .add(layout.createSequentialGroup()
                        .add(dbLabel)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(dbCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jLabel1)
                    .add(layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jdbcCheckBox))
                    .add(layout.createSequentialGroup()
                        .addContainerGap()
                        .add(warCheckBox)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(setAsMainCheckBox)
                .add(18, 18, 18)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(dbLabel)
                    .add(dbCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jdbcCheckBox)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(warCheckBox)
                .addContainerGap())
        );

        setAsMainCheckBox.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getBundle(PanelOptionsVisual.class).getString("ACSN_setAsMainCheckBox")); // NOI18N
        setAsMainCheckBox.getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getBundle(PanelOptionsVisual.class).getString("ACSD_setAsMainCheckBox")); // NOI18N

        getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(PanelOptionsVisual.class, "ACSN_PanelOptionsVisual")); // NOI18N
        getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getMessage(PanelOptionsVisual.class, "ACSD_PanelOptionsVisual")); // NOI18N
    }// </editor-fold>//GEN-END:initComponents
    
    boolean valid(WizardDescriptor settings) {
        if ((warCheckBox.isSelected() || jdbcCheckBox.isSelected()) && !RubyInstallation.getInstance().isJRubySet()) {
            settings.putProperty( "WizardPanel_errorMessage", 
                    NbBundle.getMessage(PanelOptionsVisual.class, "JRubyRequired") ); //NOI18N
            return false;
        }
        //if (mainClassTextField.isVisible () && mainClassTextField.isEnabled ()) {
        //    if (!valid) {
        //        settings.putProperty( "WizardPanel_errorMessage", // NOI18N
        //            NbBundle.getMessage(PanelOptionsVisual.class,"ERROR_IllegalMainClassName")); //NOI18N
        //    }
        //    return this.valid;
        //}
        //else {
            return true;
        //}
    }
    
    void read (WizardDescriptor d) {
        //TODO:
    }
    
    void validate (WizardDescriptor d) throws WizardValidationException {
        // nothing to validate
    }

    void store( WizardDescriptor d ) {
        d.putProperty( /*XXX Define somewhere */ "setAsMain", setAsMainCheckBox.isSelected() && setAsMainCheckBox.isVisible() ? Boolean.TRUE : Boolean.FALSE ); // NOI18N
        //d.putProperty( /*XXX Define somewhere */ "mainClass", createMainCheckBox.isSelected() && createMainCheckBox.isVisible() ? mainClassTextField.getText() : null ); // NOI18N
        d.putProperty(NewRailsProjectWizardIterator.RAILS_DB_WN, dbCombo.getSelectedItem()); // NOI18N
        d.putProperty(NewRailsProjectWizardIterator.JDBC_WN, jdbcCheckBox.isSelected() && jdbcCheckBox.isVisible() ? Boolean.TRUE : Boolean.FALSE ); // NOI18N
        d.putProperty(NewRailsProjectWizardIterator.GOLDSPIKE_WN, warCheckBox.isSelected() && warCheckBox.isVisible() ? Boolean.TRUE : Boolean.FALSE ); // NOI18N
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox dbCombo;
    private javax.swing.JLabel dbLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JCheckBox jdbcCheckBox;
    private javax.swing.JCheckBox setAsMainCheckBox;
    private javax.swing.JCheckBox warCheckBox;
    // End of variables declaration//GEN-END:variables
    
    //private void mainClassChanged () {
    //    
    //    String mainClassName = this.mainClassTextField.getText ();
    //    StringTokenizer tk = new StringTokenizer (mainClassName, "."); //NOI18N
    //    boolean valid = true;
    //    while (tk.hasMoreTokens()) {
    //        String token = tk.nextToken();
    //        if (token.length() == 0 || /* !Utilities.isJavaIdentifier(token)*/ token.equals(" ")) {
    //            valid = false;
    //            break;
    //        }            
    //    }
    //    this.valid = valid;
    //    this.panel.fireChangeEvent();
    //}
}

