Date:CLASS:[]:ESCAPED{Date}:
  MONTHNAMES:CONSTANT:[]:ESCAPED{MONTHNAMES}:
  DAYNAMES:CONSTANT:[]:ESCAPED{DAYNAMES}:
  ABBR_MONTHNAMES:CONSTANT:[]:ESCAPED{ABBR_MONTHNAMES}:
  ABBR_DAYNAMES:CONSTANT:[]:ESCAPED{ABBR_DAYNAMES}:
  ITALY:CONSTANT:[]:ESCAPED{ITALY}:
  ENGLAND:CONSTANT:[]:ESCAPED{ENGLAND}:
  JULIAN:CONSTANT:[]:ESCAPED{JULIAN}:
  GREGORIAN:CONSTANT:[]:ESCAPED{GREGORIAN}:
  os?:METHOD:[PUBLIC, STATIC]:ESCAPED{os?}(PARAMETERS{ESCAPED{jd}, ESCAPED{sg}}):
  ns?:METHOD:[PUBLIC, STATIC]:ESCAPED{ns?}(PARAMETERS{ESCAPED{jd}, ESCAPED{sg}}):
  civil_to_jd:METHOD:[PUBLIC, STATIC]:ESCAPED{civil_to_jd}(PARAMETERS{ESCAPED{y}, ESCAPED{m}, ESCAPED{d}, ESCAPED{sg}}):
  jd_to_civil:METHOD:[PUBLIC, STATIC]:ESCAPED{jd_to_civil}(PARAMETERS{ESCAPED{jd}, ESCAPED{sg}}):
  ordinal_to_jd:METHOD:[PUBLIC, STATIC]:ESCAPED{ordinal_to_jd}(PARAMETERS{ESCAPED{y}, ESCAPED{d}, ESCAPED{sg}}):
  jd_to_ordinal:METHOD:[PUBLIC, STATIC]:ESCAPED{jd_to_ordinal}(PARAMETERS{ESCAPED{jd}, ESCAPED{sg}}):
  jd_to_commercial:METHOD:[PUBLIC, STATIC]:ESCAPED{jd_to_commercial}(PARAMETERS{ESCAPED{jd}, ESCAPED{sg}}):
  commercial_to_jd:METHOD:[PUBLIC, STATIC]:ESCAPED{commercial_to_jd}(PARAMETERS{ESCAPED{y}, ESCAPED{w}, ESCAPED{d}, ESCAPED{ns}}):
  ajd_to_jd:METHOD:[PUBLIC, STATIC]:ESCAPED{ajd_to_jd}(PARAMETERS{ESCAPED{ajd}, ESCAPED{of}}):
  jd_to_ajd:METHOD:[PUBLIC, STATIC]:ESCAPED{jd_to_ajd}(PARAMETERS{ESCAPED{jd}, ESCAPED{fr}, ESCAPED{of}}):
  day_fraction_to_time:METHOD:[PUBLIC, STATIC]:ESCAPED{day_fraction_to_time}(PARAMETERS{ESCAPED{fr}}):
  time_to_day_fraction:METHOD:[PUBLIC, STATIC]:ESCAPED{time_to_day_fraction}(PARAMETERS{ESCAPED{h}, ESCAPED{min}, ESCAPED{s}}):
  amjd_to_ajd:METHOD:[PUBLIC, STATIC]:ESCAPED{amjd_to_ajd}(PARAMETERS{ESCAPED{amjd}}):
  ajd_to_amjd:METHOD:[PUBLIC, STATIC]:ESCAPED{ajd_to_amjd}(PARAMETERS{ESCAPED{ajd}}):
  mjd_to_jd:METHOD:[PUBLIC, STATIC]:ESCAPED{mjd_to_jd}(PARAMETERS{ESCAPED{mjd}}):
  jd_to_mjd:METHOD:[PUBLIC, STATIC]:ESCAPED{jd_to_mjd}(PARAMETERS{ESCAPED{jd}}):
  ld_to_jd:METHOD:[PUBLIC, STATIC]:ESCAPED{ld_to_jd}(PARAMETERS{ESCAPED{ld}}):
  jd_to_ld:METHOD:[PUBLIC, STATIC]:ESCAPED{jd_to_ld}(PARAMETERS{ESCAPED{jd}}):
  jd_to_wday:METHOD:[PUBLIC, STATIC]:ESCAPED{jd_to_wday}(PARAMETERS{ESCAPED{jd}}):
  julian_leap?:METHOD:[PUBLIC, STATIC]:ESCAPED{julian_leap?}(PARAMETERS{ESCAPED{y}}):
  gregorian_leap?:METHOD:[PUBLIC, STATIC]:ESCAPED{gregorian_leap?}(PARAMETERS{ESCAPED{y}}):
  self:CLASS:[]:ESCAPED{self}:
  self:CLASS:[]:ESCAPED{self}:
  valid_jd?:METHOD:[PUBLIC, STATIC]:ESCAPED{valid_jd?}(PARAMETERS{ESCAPED{jd}, ESCAPED{sg}}):
  jd:METHOD:[PUBLIC, STATIC]:ESCAPED{jd}(PARAMETERS{ESCAPED{jd}, ESCAPED{sg}}):
  valid_ordinal?:METHOD:[PUBLIC, STATIC]:ESCAPED{valid_ordinal?}(PARAMETERS{ESCAPED{y}, ESCAPED{d}, ESCAPED{sg}}):
  ordinal:METHOD:[STATIC, PRIVATE]:ESCAPED{ordinal}(PARAMETERS{ESCAPED{y}, ESCAPED{d}, ESCAPED{sg}}):
  valid_civil?:METHOD:[PUBLIC, STATIC]:ESCAPED{valid_civil?}(PARAMETERS{ESCAPED{y}, ESCAPED{m}, ESCAPED{d}, ESCAPED{sg}}):
  self:CLASS:[]:ESCAPED{self}:
  civil:METHOD:[STATIC, PRIVATE]:ESCAPED{civil}(PARAMETERS{ESCAPED{y}, ESCAPED{m}, ESCAPED{d}, ESCAPED{sg}}):
  self:CLASS:[]:ESCAPED{self}:
  valid_commercial?:METHOD:[PUBLIC, STATIC]:ESCAPED{valid_commercial?}(PARAMETERS{ESCAPED{y}, ESCAPED{w}, ESCAPED{d}, ESCAPED{sg}}):
  commercial:METHOD:[STATIC, PRIVATE]:ESCAPED{commercial}(PARAMETERS{ESCAPED{y}, ESCAPED{w}, ESCAPED{d}, ESCAPED{sg}}):
  new_with_hash:METHOD:[PUBLIC, STATIC]:ESCAPED{new_with_hash}(PARAMETERS{ESCAPED{elem}, ESCAPED{sg}}):
  strptime:METHOD:[PUBLIC, STATIC]:ESCAPED{strptime}(PARAMETERS{ESCAPED{str}, ESCAPED{fmt}, ESCAPED{sg}}):
  parse:METHOD:[PUBLIC, STATIC]:ESCAPED{parse}(PARAMETERS{ESCAPED{str}, ESCAPED{comp}, ESCAPED{sg}}):
  today:METHOD:[PUBLIC, STATIC]:ESCAPED{today}(PARAMETERS{ESCAPED{sg}}):
  self:CLASS:[]:ESCAPED{self}:
    once:METHOD:[STATIC]:ESCAPED{once}(PARAMETERS{ESCAPED{*ids}}):
  initialize:CONSTRUCTOR:[PRIVATE]:ESCAPED{initialize}(PARAMETERS{ESCAPED{ajd}, ESCAPED{of}, ESCAPED{sg}}):
  ajd:METHOD:[PUBLIC]:ESCAPED{ajd}:
  amjd:METHOD:[PUBLIC]:ESCAPED{amjd}:
  jd:METHOD:[PUBLIC]:ESCAPED{jd}:
  day_fraction:METHOD:[PUBLIC]:ESCAPED{day_fraction}:
  mjd:METHOD:[PUBLIC]:ESCAPED{mjd}:
  ld:METHOD:[PUBLIC]:ESCAPED{ld}:
  civil:METHOD:[PRIVATE]:ESCAPED{civil}:
  ordinal:METHOD:[PRIVATE]:ESCAPED{ordinal}:
  commercial:METHOD:[PRIVATE]:ESCAPED{commercial}:
  year:METHOD:[PUBLIC]:ESCAPED{year}:
  yday:METHOD:[PUBLIC]:ESCAPED{yday}:
  mon:METHOD:[PUBLIC]:ESCAPED{mon}:
  mday:METHOD:[PUBLIC]:ESCAPED{mday}:
  time:METHOD:[PRIVATE]:ESCAPED{time}:
  hour:METHOD:[PRIVATE]:ESCAPED{hour}:
  min:METHOD:[PRIVATE]:ESCAPED{min}:
  sec:METHOD:[PRIVATE]:ESCAPED{sec}:
  sec_fraction:METHOD:[PRIVATE]:ESCAPED{sec_fraction}:
  zone:METHOD:[PRIVATE]:ESCAPED{zone}:
  cwyear:METHOD:[PUBLIC]:ESCAPED{cwyear}:
  cweek:METHOD:[PUBLIC]:ESCAPED{cweek}:
  cwday:METHOD:[PUBLIC]:ESCAPED{cwday}:
  wday:METHOD:[PUBLIC]:ESCAPED{wday}:
  os?:METHOD:[PUBLIC]:ESCAPED{os?}:
  ns?:METHOD:[PUBLIC]:ESCAPED{ns?}:
  leap?:METHOD:[PUBLIC]:ESCAPED{leap?}:
  start:METHOD:[PUBLIC]:ESCAPED{start}:
  new_start:METHOD:[PUBLIC]:ESCAPED{new_start}(PARAMETERS{ESCAPED{sg}}):
  italy:METHOD:[PUBLIC]:ESCAPED{italy}:
  england:METHOD:[PUBLIC]:ESCAPED{england}:
  julian:METHOD:[PUBLIC]:ESCAPED{julian}:
  gregorian:METHOD:[PUBLIC]:ESCAPED{gregorian}:
  offset:METHOD:[PRIVATE]:ESCAPED{offset}:
  new_offset:METHOD:[PRIVATE]:ESCAPED{new_offset}(PARAMETERS{ESCAPED{of}}):
  +:METHOD:[PUBLIC]:ESCAPED{+}(PARAMETERS{ESCAPED{n}}):
  -:METHOD:[PUBLIC]:ESCAPED{-}(PARAMETERS{ESCAPED{x}}):
  <=>:METHOD:[PUBLIC]:ESCAPED{<=>}(PARAMETERS{ESCAPED{other}}):
  ===:METHOD:[PUBLIC]:ESCAPED{===}(PARAMETERS{ESCAPED{other}}):
  >>:METHOD:[PUBLIC]:ESCAPED{>>}(PARAMETERS{ESCAPED{n}}):
  <<:METHOD:[PUBLIC]:ESCAPED{<<}(PARAMETERS{ESCAPED{n}}):
  step:METHOD:[PUBLIC]:ESCAPED{step}(PARAMETERS{ESCAPED{limit}, ESCAPED{step}}):
  upto:METHOD:[PUBLIC]:ESCAPED{upto}(PARAMETERS{ESCAPED{max}, ESCAPED{&block}}):
  downto:METHOD:[PUBLIC]:ESCAPED{downto}(PARAMETERS{ESCAPED{min}, ESCAPED{&block}}):
  succ:METHOD:[PUBLIC]:ESCAPED{succ}:
  eql?:METHOD:[PUBLIC]:ESCAPED{eql?}(PARAMETERS{ESCAPED{other}}):
  hash:METHOD:[PUBLIC]:ESCAPED{hash}:
  inspect:METHOD:[PUBLIC]:ESCAPED{inspect}:
  to_s:METHOD:[PUBLIC]:ESCAPED{to_s}:
  _dump:METHOD:[PUBLIC]:ESCAPED{_dump}(PARAMETERS{ESCAPED{limit}}):
  _load:METHOD:[PUBLIC, STATIC]:ESCAPED{_load}(PARAMETERS{ESCAPED{str}}):
  of:FIELD:[]:ESCAPED{of}:
  ajd:FIELD:[]:ESCAPED{ajd}:
  sg:FIELD:[]:ESCAPED{sg}:
DateTime:CLASS:[]:ESCAPED{DateTime}:
  valid_time?:METHOD:[PUBLIC, STATIC]:ESCAPED{valid_time?}(PARAMETERS{ESCAPED{h}, ESCAPED{min}, ESCAPED{s}}):
  jd:METHOD:[PUBLIC, STATIC]:ESCAPED{jd}(PARAMETERS{ESCAPED{jd}, ESCAPED{h}, ESCAPED{min}, ESCAPED{s}, ESCAPED{of}, ESCAPED{sg}}):
  ordinal:METHOD:[PUBLIC, STATIC]:ESCAPED{ordinal}(PARAMETERS{ESCAPED{y}, ESCAPED{d}, ESCAPED{h}, ESCAPED{min}, ESCAPED{s}, ESCAPED{of}, ESCAPED{sg}}):
  civil:METHOD:[PUBLIC, STATIC]:ESCAPED{civil}(PARAMETERS{ESCAPED{y}, ESCAPED{m}, ESCAPED{d}, ESCAPED{h}, ESCAPED{min}, ESCAPED{s}, ESCAPED{of}, ESCAPED{sg}}):
  self:CLASS:[]:ESCAPED{self}:
  commercial:METHOD:[PUBLIC, STATIC]:ESCAPED{commercial}(PARAMETERS{ESCAPED{y}, ESCAPED{w}, ESCAPED{d}, ESCAPED{h}, ESCAPED{min}, ESCAPED{s}, ESCAPED{of}, ESCAPED{sg}}):
  new_with_hash:METHOD:[PUBLIC, STATIC]:ESCAPED{new_with_hash}(PARAMETERS{ESCAPED{elem}, ESCAPED{sg}}):
  strptime:METHOD:[PUBLIC, STATIC]:ESCAPED{strptime}(PARAMETERS{ESCAPED{str}, ESCAPED{fmt}, ESCAPED{sg}}):
  parse:METHOD:[PUBLIC, STATIC]:ESCAPED{parse}(PARAMETERS{ESCAPED{str}, ESCAPED{comp}, ESCAPED{sg}}):
  self:CLASS:[]:ESCAPED{self}:
  now:METHOD:[PUBLIC, STATIC]:ESCAPED{now}(PARAMETERS{ESCAPED{sg}}):
Date:CLASS:[]:ESCAPED{Date}:
DateTime:CLASS:[]:ESCAPED{DateTime}:
