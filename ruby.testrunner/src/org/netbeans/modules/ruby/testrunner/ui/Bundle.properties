# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright 1997-2007 Sun Microsystems, Inc. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common
# Development and Distribution License("CDDL") (collectively, the
# "License"). You may not use this file except in compliance with the
# License. You can obtain a copy of the License at
# http://www.netbeans.org/cddl-gplv2.html
# or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
# specific language governing permissions and limitations under the
# License.  When distributing the software, include this License Header
# Notice in each file and include the License file at
# nbbuild/licenses/CDDL-GPL-2-CP.  Sun designates this
# particular file as subject to the "Classpath" exception as provided
# by Sun in the GPL Version 2 section of the License file that
# accompanied this code. If applicable, add the following below the
# License Header, with the fields enclosed by brackets [] replaced by
# your own identifying information:
# "Portions Copyrighted [year] [name of copyright owner]"
#
# Contributor(s):
#
# The Original Software is NetBeans. The Initial Developer of the Original
# Software is Sun Microsystems, Inc. Portions Copyright 2006-2007 Sun
# Microsystems, Inc. All Rights Reserved.
#
# If you wish your version of this file to be governed by only the CDDL
# or only the GPL Version 2, indicate your decision by adding
# "[Contributor] elects to include this software in this distribution
# under the [CDDL or GPL Version 2] license." If you do not indicate a
# single choice of license, a recipient has the option to distribute
# your version of this file under either the CDDL, the GPL Version 2 or
# to extend the choice of license to its licensees as provided above.
# However, if you add GPL Version 2 code and therefore, elected the GPL
# Version 2 license, then the option applies only if the new code is
# made subject to such option by the copyright holder.

TITLE_TEST_RESULTS=Ruby Test Results
ACSN_TestResults=Ruby Test Results
ACSD_TestResults=Displays information about passed and failed tests and output generated by them
COMPOUND_SUITE=<compound suite>
UNNKOWN_NAME=???
MSG_NoTestExecuted=No test was executed.
MSG_TestInterruptedNoResults=The test run was interrupted, no results available.
LBL_resultTreeView=Statistics
LBL_resultOutputView=Output
TTP_resultTreeView=Show statistics from the test
TTP_resultOutputView=Show output from the test
ACSN_FilterButton=Filter On/Off
ACSN_SplitOrientationButton = Switch orientation
ACSN_RerunButton = Re-run
ACSN_ResultPanelTree=Information about passed and failed tests
ACSD_ResultPanelTree=Displays information about passed, failed and errorneous tests in a tree structure
ACSN_HorizontalScrollbar=Horizontal scrollbar of the results panel
ACSN_VerticalScrollbar=Vertical scrollbar of the results panel
ACSN_OutputTextPane=Test Output
ACSD_OutputTextPane=Displays output and error output generated by executed test methods

MSG_PassedTestsInfo={0,choice,0#No test|1#1 test|1<{0,number,integer} tests} passed
MSG_FailedTestsInfo={0,choice,1#1 test|1<{0,number,integer} tests} failed
MSG_PendingTestsInfo={0,choice,1#1 test|1<{0,number,integer} tests} pending
MSG_ErrorTestsInfo={0,choice,1#1 test|1<{0,number,integer} tests} caused an error

MSG_TestsInfoNoTests=No tests executed.

# "All 58 tests passed."
MSG_TestsInfoAllOK={0,choice,1#The test|2#Both tests|2<All {0,number,integer} tests} passed.

# The result summary can be a combination of passed, pending, failed and error 
# causing tests. The keys below are for all combinations of these, the preferred
# order is passed, pending, failed, error.
MSG_TestResultSummary1 = {0}, {1}.
MSG_TestResultSummary2 = {0}, {1}, {2}.
MSG_TestResultSummary3 = {0}, {1}, {2}, {3}.

MSG_ProgressMessage=Running unit tests...
# "foo.bar.baz.MyClassTest (3/8)"
MSG_ProgressStepMessage={0} ({1}/{2})
# "test suite 3/8"   (running third suite out of eight suites)
MSG_ProgressStepMessageAnonymous=test suite {1}/{2}

# {0} .. name of the test class
MSG_TestsuiteNoname=Test suite
MSG_TestsuiteRunning={0} - running...
MSG_TestsuiteRunningNoname=Test suite running...
MSG_TestsuiteFailed={0} - FAILED
MSG_TestsuitePending={0} - PENDING
MSG_TestsuiteRunning_HTML=running...
MSG_TestsuitePassed_HTML=passed
MSG_TestsuiteFailed_HTML=FAILED
MSG_TestsuitePending_HTML=PENDING

# {0} .. name of the test method
MSG_TestMethodFailed={0} - FAILED
MSG_TestMethodPending={0} - PENDING
MSG_TestMethodError={0} - caused an ERROR
MSG_TestMethodPassed_HTML=passed
MSG_TestMethodFailed_HTML=FAILED
MSG_TestMethodPending_HTML=PENDING
MSG_TestMethodError_HTML=caused an ERROR

# {0} .. name of the test method, {1} .. elapsed time in seconds
MSG_TestMethodPassed_time={0}  ({1,number,0.0##} s)
MSG_TestMethodFailed_time={0} - FAILED  ({1,number,0.0##} s)
MSG_TestMethodPending_time={0} - PENDING ({1,number,0.0##} s)
MSG_TestMethodError_time={0} - caused an ERROR  ({1,number,0.0##} s)
MSG_TestMethodPassed_HTML_time=passed  ({0,number,0.0##} s)
MSG_TestMethodFailed_HTML_time=FAILED  ({0,number,0.0##} s)
MSG_TestMethodPending_HTML_time=PENDING  ({0,number,0.0##} s)
MSG_TestMethodError_HTML_time=caused an ERROR  ({0,number,0.0##} s)

# Elapsed time for a test suite
MSG_TestSuiteElapsedTime= ({0,number,0.0##} s)

#
MSG_PassedNotDisplayed=Information about passed tests is not displayed.
MSG_SomePassedNotDisplayed=Information about some passed tests is not displayed.

MSG_StdOutput=Standard Output:
MSG_ErrOutput=Error Output:

#
MultiviewPanel.btnFilter.showAll.tooltip=Show All Results
MultiviewPanel.btnFilter.showFailures.tooltip=Show Failures only

MultiviewPanel.splitOrientation.vertical.tooltip=Switch to horizontal orientation
MultiviewPanel.splitOrientation.horizontal.tooltip=Switch to vertical orientation
MultiviewPanel.rerunButton.tooltip=Re-run

LBL_RunningTests=Running...
