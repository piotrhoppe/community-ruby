# The contents of this file are subject to the terms of the Common Development
# and Distribution License (the License). You may not use this file except in
# compliance with the License.
#
# You can obtain a copy of the License at http://www.netbeans.org/cddl.html
# or http://www.netbeans.org/cddl.txt.
#
# When distributing Covered Code, include this CDDL Header Notice in each file
# and include the License file at http://www.netbeans.org/cddl.txt.
# If applicable, add the following below the CDDL Header, with the fields
# enclosed by brackets [] replaced by your own identifying information:
# "Portions Copyrighted [year] [name of copyright owner]"
#
# The Original Software is NetBeans. The Initial Developer of the Original
# Software is Sun Microsystems, Inc. Portions Copyright 1997-2006 Sun
# Microsystems, Inc. All Rights Reserved.

OpenIDE-Module-Display-Category=Ruby
OpenIDE-Module-Name=Ruby Experimental Hints
OpenIDE-Module-Short-Description=Experimental source code hints for Ruby
OpenIDE-Module-Long-Description=Experimental source code hints for Ruby

# Category descriptions in the Options Panel
org-netbeans-modules-ruby-hints/rules/hints/experimental=Experimental

# NestedLocal
NestedLocal=Nested local variable
NestedLocalDesc=Detects local variable usages that are "nested" (such as in for loops) \
 where the loop variable is being reused
NestedLocalName=Loop variable {0} already exists in scope and is being reused
ChangeInner=Rename the inner variable
ChangeOuter=Rename the outer variable

# ConvertBlockType
ConvertBlockType=Convert between {}-blocks and do/end blocks
ConvertBlockTypeDesc=Convert between {}-blocks and do/end blocks

ConvertBraceToDo=Convert {}-block to a do/end-block
ConvertBraceToDoMulti=Convert {}-block to a do/end-block, and expand to multiple lines
ConvertBraceToDoSingle=Convert {}-block to a do/end-block, and collapse to a single line
ConvertDoToBrace=Convert do/end-block to a {}-block
ConvertDoToBraceSingle=Convert do/end-block to a {}-block, and collapse to a single line
ConvertDoToBraceMulti=Convert do/end-block to a {}-block, and expand to multiple lines
ChangeBlockToMulti=Expand single-line block to multiple lines
ChangeBlockToSingle=Collapse multi-line block to a single line

# ConstantNames
ConstantNameWarning=Uppercase constant name check
ConstantNameWarningDesc=Check constant names to find CamelCase names rather than the preferred CONSTANT style
InvalidConstantName=Style: Constants traditionally use uppercase letters only

# CamelCaseNames
CamelCaseNames=CamelCase name alert
CamelCaseNamesDesc=Check method names to find camelCase names instead of the preferred method_name style
InvalidMethodName=Style: Method names traditionally use lowercase letters only
InvalidLocalName=Style: Variables traditionally use lowercase letters only
RenameTo=Rename to {0}
RenameVar=Rename...

# UnsafeIdentifierChars
UnsafeIdentifierChars=Check identifiers for unsafe characters
UnsafeIdentifierCharsDesc=Only a-z, A-Z, digits and underscore are safe in identifier names. Other \
 international character can lead to runtime errors.
InvalidMultibyte=International chars: Only a-z, A-Z, digits and underscore are safe in identifier names

# FileExistenceChecker
#FileExistenceChecker=File existence checker
#FileExistenceCheckerDesc=Ensures that files referenced from Rails views, actions etc. actually exist
#MissingFile=The referenced file ({0}) does not exist

# RailsViews
FindActionViews=Find actions without corresponding view files
FindActionViewsDesc=Locates actions in Rails controller files that don't have a corresponding view file
MissingView=Controller action without corresponding view file
CreateView=Create view (open generator)

# AttributeIsLocal
AttributeIsLocal=Local variable assignment possibly intended to be accessing an attribute?
AttributeIsLocalDesc=Detects cases where a local variable assignment is referring to a local variable \
 whose name is identical to an attribute on this class, which is a common source of errors.
FixSelf=Change assignment to self.{0} to use attribute
FixRename=Rename local variable to avoid confusion
ShowAttribute=Go to the relevant attribute definition ({0})
